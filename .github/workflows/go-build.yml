name: Go Build

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version: 1.19
      - name: Install Dependencies
        run: go get .
      - name: Verify
        run: go vet ./...
  Test:
    needs: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s-version: ["1.22", "1.23", "1.24", "1.25"]
    env:
      ENVTEST_K8S_VERSION: ${{ matrix.k8s-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version: 1.19
      - name: Set up envtest
        run: |
          make envtest
          echo "KUBEBUILDER_ASSETS=$(bin/setup-envtest use $ENVTEST_K8S_VERSION -p path)" >> $GITHUB_ENV
      - name: Test
        run: go test ./...
  Secure:
    needs: Test
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Snapshots
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        format: 'spdx-json'
        output: 'dependency-results.sbom.json'
        image-ref: '.'
    - uses: actions/upload-artifact@v3
      with:
        name: 'dependency-results.sbom.json'
        path: './dependency-results.sbom.json'